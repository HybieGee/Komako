---
import PhotoCard from './PhotoCard.astro';

export interface Photo {
  title: string;
  image: string;
  alt: string;
  date: string;
  tags?: string[];
  slug: string;
}

export interface Props {
  photos: Photo[];
  loading?: 'lazy' | 'eager';
}

const { photos, loading = 'lazy' } = Astro.props;
---

<div class="masonry-grid">
  {photos.map((photo, index) => (
    <div class="masonry-item-wrapper" style={`animation-delay: ${index * 100}ms`}>
      <PhotoCard
        {...photo}
        loading={index < 8 ? 'eager' : loading}
      />
    </div>
  ))}
</div>

<style>
  .masonry-grid {
    column-count: 1;
    column-gap: 1.5rem;
    padding: 1rem 0;
  }

  .masonry-item-wrapper {
    break-inside: avoid;
    margin-bottom: 1.5rem;
    opacity: 0;
    transform: translateY(20px);
    animation: fadeInUp 0.6s ease-out forwards;
  }

  @keyframes fadeInUp {
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @media (min-width: 640px) {
    .masonry-grid {
      column-count: 2;
      column-gap: 2rem;
    }
  }

  @media (min-width: 1024px) {
    .masonry-grid {
      column-count: 3;
      column-gap: 2rem;
    }
  }

  @media (min-width: 1280px) {
    .masonry-grid {
      column-count: 4;
      column-gap: 1.5rem;
    }
  }

  @media (min-width: 1536px) {
    .masonry-grid {
      column-count: 5;
    }
  }
</style>